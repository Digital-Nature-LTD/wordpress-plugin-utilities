window.DigitalNature=window.DigitalNature||{};window.DigitalNature.utils={request:{get:async function(e){return(await fetch(e,{method:"GET",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json","X-WP-Nonce":wpApiSettings.nonce},redirect:"follow",referrerPolicy:"no-referrer"})).json()},post:async function(e,t={}){return(await fetch(e,{method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json","X-WP-Nonce":wpApiSettings.nonce},redirect:"follow",referrerPolicy:"no-referrer",body:JSON.stringify(t)})).json()},params:{get(e){return new URLSearchParams(window.location.search).get(e)}}},dragTable:{row:null,init:function(){document.addEventListener("dragstart",function(e){e.target.closest(".dn-draggable-table")&&window.DigitalNature.utils.dragTable.start(e)}),document.addEventListener("dragover",function(e){e.target.closest(".dn-draggable-table")&&window.DigitalNature.utils.dragTable.dragover(e)})},start:function(e){window.DigitalNature.utils.dragTable.row=e.target},dragover:function(e){e.preventDefault();let t=Array.from(e.target.parentNode.parentNode.children);t.indexOf(e.target.parentNode)>t.indexOf(window.DigitalNature.utils.dragTable.row)?e.target.parentNode.after(window.DigitalNature.utils.dragTable.row):e.target.parentNode.before(window.DigitalNature.utils.dragTable.row)}},forms:{hasErrorMessage:function(e){return!!e.parentElement.querySelector(".dn-form-error-message")},addErrorMessage:function(e,t,r=null,n=!0){if(!t){console.error("Cannot add error message, field does not exist. Message was:",e);return}const a=document.createElement("div");a.style.width="100%",a.classList.add("dn-form-error-message"),a.textContent=e,n&&window.DigitalNature.utils.forms.removeErrorMessage(t),t.parentElement.appendChild(a),r&&n&&setTimeout(function(){window.DigitalNature.utils.forms.removeErrorMessage(t)},r*1e3)},removeErrorMessage:function(e){const t=e.parentElement.querySelector(".dn-form-error-message");t&&t.remove()},removeAllErrorMessages:function(e){e.querySelectorAll(".dn-utilities-error-message").forEach(function(t){t.remove()})},updateFieldAndTriggerChangeEvent:function(e,t){e.value=t;let r=new Event("change");e.dispatchEvent(r)}},visibilityToggle:{init:function(){document.addEventListener("click",function(e){if(!e.target.matches(".dn-toggle-visibility-trigger"))return;e.preventDefault();let t=e.target.dataset.targetId;if(!t)return!1;let r=document.getElementById(t);r.classList.toggle("visible");let n=null;return r.classList.contains("visible")?n=e.target.dataset.closedText:n=e.target.dataset.openText,e.target.textContent=n,!1})}},areYouSure:{init:function(){document.addEventListener("click",function(e){if(!e.target.matches(".are-you-sure"))return;let t="Are you sure? This cannot be undone";return e.target.dataset.confirmationMessage&&(t=e.target.dataset.confirmationMessage),confirm(t)?!0:(e.preventDefault(),!1)})}},animations:{addLoadingSpinner:function(e){window.DigitalNature.utils.animations.removeLoadingSpinner(e);const t=document.createElement("div");t.classList.add("digital-nature-loader");const r=document.createElement("div");r.classList.add("digital-nature-loader-background"),t.appendChild(r);const n=document.createElement("div");n.classList.add("digital-nature-loader-content"),t.appendChild(n),e.appendChild(t)},removeLoadingSpinner:function(e){const t=e.querySelector(".digital-nature-loader");t&&t.remove()}}};window.DigitalNature.utils.dragTable.init();window.DigitalNature.utils.visibilityToggle.init();window.DigitalNature.utils.areYouSure.init();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
